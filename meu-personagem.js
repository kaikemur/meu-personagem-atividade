// 1.üîπ Cria√ß√£o das Vari√°veis Principais
let nome = "ziegfried";
let classe = "guerreiro" ;
let nivel = 16;
let vida = 130;
let moedas = 1000;
let xp = 200;
let aura = 150;


// 2. üî∏ Defini√ß√£o de Constantes M√°gicas

const nomeArma = "balmung";
let DANOBASE = 100 ;
let nomeArmadura= "fafinir" ;
let defesaBase = 500;

// 3. ‚öôÔ∏è Aplica√ß√£o de Operadores de Atribui√ß√£o

let pocao = 40;
let valorDaPocao = 30;
xp += 150 ;
moedas -+ valorDaPocao ;
vida += pocao

// 4.‚ûï C√°lculo de Atributos Finais
let ataqueTotal = nivel + DANOBASE;
let defesaTotal = defesaBase + (nivel / 2);

// 5. üîê Avalia√ß√£o de Prontid√£o com Operadores L√≥gicos

let vidaSuficiente = vida > 70
let ataqueForte = ataqueTotal > 60
let nivelAvancado = nivel >= 10
let podeEnfrentarGuardiao = vidaSuficiente && (ataqueForte || nivelAvancado)


// 6.üìú Gera√ß√£o da Lore do Personagem
console.log(`üßæ LORE DO HER√ìI:${nome} `);
console.log(``);
console.log(`${nome}, o gurreiro de germania, explora e desvenda as ru√≠nas criptografadas do Reino de Algorithmi`);
console.log(`Portando a espada matadora de cyberdrag√µes ${nomeArma}, ele usa o corte undefined contra seus adversarios e inimigos .`);
console.log(`Com n√≠vel ${nivel} e um ataque total de ${ataqueTotal}, √© temido por todos os reinos e ate mesmo pelos virus mais antigos.`);
console.log(`Seu vigor √©, impulsionado pela armadura antiga ${nomeArmadura}, que  atinge ${defesaTotal} pontos de defesa total,capas de defender quase todos os tipos de ataques fisicos .`);
console.log(`Ap√≥s uma  intensa jornada de treinamento ele , acumulou ${xp} de XP e carrega consigo ${moedas} moedas, pronto para negocia√ß√µes e subornos nas guildas de byte e na prisao de ssd  .`);
console.log(`${nome }Restaurado com ${vida} pontos de vida,apos uma intensa luta acaba por chegar na taverna de terabyte em uma cidade proxima .`);
console.log(`Vida suficiente? ${vidaSuficiente}| Ataque forte? ${ataqueForte} | N√≠vel avan√ßado? ${nivelAvancado}`);
console.log(`Pode enfrentar o Guardi√£o? ${podeEnfrentarGuardiao} ‚Äî a batalha final se aproxima, e o destino est√° sendo compilado.`);

//nivel 2 da atividade


//1üîó Resgate do N√≠vel 

// === CONTINUA√á√ÉO DA SUA JORNADA DO N√çVEL 1 ===




// Novos atributos para batalha
let forca = 50;
let defesa = 45;
let agilidade = 79;
let combatesVencidos = 0;

// Estado atual da hist√≥ria (continue de onde parou no N√≠vel 1)
let localAtual = "taverna de tarabyte ";
let missaoAtual = "derrotar o mago dos keyloggers";
let comerciante = "aurora B.D"
let inimigo = "mago dos keyloggers";

// 2 üìñ Estrutura Narrativa Obrigat√≥ria
console.log(`-----------------------------------------------------------------`);

//PROLOGO
console.log(`anteriormente em Algorithmi ${nome} vai a ${localAtual} para se refugiar mas acaba encotrando com um homen que ele ainda n√£o conhecia`);
console.log(`-----------------------------------------------------------------`);

// Cap√≠tulo 1 - üö™chegada inesperada
console.log(` Cap√≠tulo 1 - üö™chegada inesperada`);

//verifica√ß√£o de identidade
if (nivel >= 10) {
    console.log(`voc√™ pode entrar na ${localAtual} `);
    
}
//comprando po√ß√£o  de resistencia
if (moedas >= 100) {;
    let pocao = "po√ß√£o de resistencia";
    let valorDaPocaoResistencia = 100 ;

    moedas-=valorDaPocaoResistencia;
    console.log(`voce podera comprar a ${pocao} e sobrara ${moedas} moedas`);
}
//verifica√ß√£o de classe 
if(classe ==="guerreiro"){
    let habilidade = "corte de binarios"
    console.log(`voce podera aprender a ${habilidade}`);
}

console.log(`-----------------------------------------------------------------`);

// capitulo 2 - ü§∫luta inesperada

console.log(`capitulo 2 - ü§∫luta inesperada`);


if(defesaBase >=300 ){
    defesaBase -= 100;
    console.log(`${nome} entra em luta com um virus mas consegue se defender de um dos seus ataque, mas sua armadura acaba quebrando uma parte o fazendo ficar com ${defesaBase} `);

}else {
    defesaBase -= 300;
    console.log(`se a defesa de ${nome} n√£o for o suficiente sua armadura quebrara completamenta fazendo o ficar com ${defesaBase} reduzida devido a perca de sua armadura`);
    
}

if(xp >=100 ){
    console.log(`${nome} consegue upar de nivel devido a intesidade da batalha e suas habilidades despertam derrotando o inimigo`);
    nivel ++;
    defesaBase+=50;
    xp = 0;
    ataqueTotal+=50;
}else{
    console.log(`${nome} nessecita de mais experiencia antes de upar para o proximo nivel mas mesmo assim derrota seu inimigo porem fica em estado grave`);
    
}
console.log(`-----------------------------------------------------------------`);

// capitulo 3 - ‚öîÔ∏è Batalha final
console.log(`capitulo 3 - ‚öîÔ∏è Batalha final`);

let poderinimigo = 125;

//estrategia de combate de acordo com situa√ß√£o
if(vidaSuficiente<=125){
    console.log(`${nome} em uma tentativa dessesperada`);
    console.log(`usa seu ataque final`);
    poderinimigo -= (ataqueTotal * 2)
    console.log(`deixando o ${inimigo} acabado e finalmente cumprindo seu objetivo ` );
}else if (forca>=50 && classe=== "guerreiro"){
    console.log(`embui sua espada ${nomeArma} com aura para um ataque definitivo`);
    console.log(`corte final`);
    poderinimigo-=30;
    aura -=aura;
    console.log(`assim morrendo junto ao ${inimigo} mas finalmente cumprindo seu objetivo`);
    vida -= vida;
}else if(moedas>=200 &&  agilidade>=40){
    console.log(`${nome} suborna um dos lacaios do ${inimigo} e foge `);
    poderinimigo-=agilidade;
}else
console.log(`${nome} falha em sua missao e acaba nao derrotando o ${inimigo} e presso for√ßado a trabalhar para ele`);
console.log("üìú === CONTINUA√á√ÉO DA JORNADA DE " + nome + " ===");
console.log("");

// PR√ìLOGO - Conex√£o com o N√≠vel 1
console.log("Ap√≥s os eventos do " + localAtual + ", nosso her√≥i " + nome);
console.log("da classe " + classe + " se depara com um novo desafio...");
console.log("");

// [Aqui voc√™ implementa os 3 cap√≠tulos com os conceitos das etapas anteriores]

// EP√çLOGO - Resultado final
if (poderinimigo <= 0) {
    console.log("üéâ VIT√ìRIA √âPICA! " + nome + " triunfa na sua batalha final!");
    xp += 100;
    combatesVencidos++;
    console.log("A lenda de " + nome + " cresce...");
} else {
    console.log("‚öîÔ∏è A batalha foi √°rdua, mas " + nome + " sobrevive para lutar outro dia!");
}

console.log("");
console.log("üèÅ FIM DO CAP√çTULO - Aguarde o pr√≥ximo n√≠vel da aventura!");
console.log("");

// capitulo 3 - ‚öîÔ∏è Batalha final
console.log(`capitulo 3 - ‚öîÔ∏è Batalha final`);

//estrategia de combate de acordo com situa√ß√£o
if(vidaSuficiente<=125){
    console.log(`${nome} em uma tentativa dessesperada`);
    console.log(`usa seu ataque final`);
    poderinimigo -= (ataqueTotal * 2)
    console.log(`deixando o ${inimigo} acabado e finalmente cumprindo seu objetivo ` );
}else if (forca>=50 && classe=== "guerreiro"){
    console.log(`embui sua espada ${nomeArma} com aura para um ataque definitivo`);
    console.log(`corte final`);
    poderinimigo-=30;
    aura -=aura;
    console.log(`assim morrendo junto ao ${inimigo} mas finalmente cumprindo seu objetivo`);
    vida -= vida;
}else if(moedas>=200 &&  agilidade>=40){
    console.log(`${nome} suborna um dos lacaios do ${inimigo} e foge `);
    poderinimigo-=agilidade;
}else
console.log(`${nome} falha em sua missao e acaba nao derrotando o ${inimigo} e presso for√ßado a trabalhar para ele`);
console.log("üìú === CONTINUA√á√ÉO DA JORNADA DE " + nome + " ===");
console.log("");

// PR√ìLOGO - Conex√£o com o N√≠vel 1
console.log("Ap√≥s os eventos do " + localAtual + ", nosso her√≥i " + nome);
console.log("da classe " + classe + " se depara com um novo desafio...");
console.log("");

// [Aqui voc√™ implementa os 3 cap√≠tulos com os conceitos das etapas anteriores]

// EP√çLOGO - Resultado final
if (poderinimigo <= 0) {
    console.log("üéâ VIT√ìRIA √âPICA! " + nome + " triunfa na sua batalha final!");
    xp += 100;
    combatesVencidos++;
    console.log("A lenda de " + nome + " cresce...");
} else {
    console.log("‚öîÔ∏è A batalha foi √°rdua, mas " + nome + " sobrevive para lutar outro dia!");
}

console.log("");
console.log("üèÅ FIM DO CAP√çTULO - Aguarde o pr√≥ximo n√≠vel da aventura!");
console.log("");

// === CONTINUA√á√ÉO DA SAGA √âPICA - N√çVEL 3 ===
// Mantenha seu personagem dos n√≠veis anteriores e adicione:

// === CONTINUA√á√ÉO DA SAGA √âPICA - N√çVEL 3 ===
// Mantenha seu personagem dos n√≠veis anteriores e adicione:


let vidaAtual = 120;
let vidaMaxima = 120;
let experiencia = 200;
let ouro = 150;

// === NOVOS ELEMENTOS PARA O CASTELO DOS ARRAYS ===
// Invent√°rio m√°gico - primeira cole√ß√£o arcana
let inventario = ["Po√ß√£o de Vida", "Espada  amaldo√ßoada", "Armadura de drag√£o"];
let aliados = ["Mago mogi", "paladino arthur", "Arqueiro maomao","berserk guts"];
let inimigosEncontrados = ["orc Sombrio", "goblin menor", "Drag√£o alen"];
let areasCaverna = ["fonte das string", "catacumbas dos virus", "espelhotemas "];
let tesouroColetado = [];
let caverna = "caverna dos arrays"

console.log(`üï≥ ===  ${nome} ADENTRA O ${caverna} ===`);
console.log(`Ap√≥s as vit√≥rias dos n√≠veis anteriores, nosso her√≥i${nome} chegou a caverna sombria...`);
console.log(`Invent√°rio inicial: ${inventario.length}`);

// === CAP√çTULO 1: DESCOBERTA DAS COLE√á√ïES ARCANAS ===
console.log("");
console.log("üóùÔ∏è CAP√çTULO 1: Os Ba√∫s perdidos da caverna sombria");

// 3.5.1. Declara√ß√£o e inicializa√ß√£o
let objetosEncontradas = ["Cura Maior", "elmo de chifres", "capa da Invisibilidade"];
let armadilhasAtiradas = []; // Array vazio - ser√° preenchido na aventura

// 3.5.2. Acesso e modifica√ß√£o de elementos
console.log(` ü•ÑPrimeiros objetos encontrada: ${objetosEncontradas[0]}`);
console.log(`‚ùá Total de objetos m√°gicas${ objetosEncontradas.length}`);

// Modificando elemento espec√≠fico
inventario[0] = "espada encantada"; // Upgrade na espada !
console.log(`‚ú® ${nome} aprimorou uma arma!`);

// 3.5.3. M√©todos de array fundamentais
inventario.push("Anel de Prote√ß√£o"); // Adiciona no final
console.log(`‚õë Novo item encontrado! Invent√°rio: ${inventario}`);
let itemRemovido = inventario.pop(); // Remove do final
console.log("üì§ Item removido: " + itemRemovido);
console.log("üéí Invent√°rio atual: " + inventario);

// === CAP√çTULO 2:  EXPLORA√á√ÉO AO DESCONHECIDO===
console.log("");
console.log("‚öîÔ∏è CAP√çTULO 2: Explorando as catacumbas de virus");

// Explorando cada buraco da caverna usando for tradicional
console.log("üó∫Ô∏è Come√ßando explora√ß√£o das " + areasCaverna.length + "Das 3 passagens ...");

for (let i = 0; i < areasCaverna.length; i++) {
console.log("üï≥Ô∏è passagen " + (i + 1) + ": " + areasCaverna[i]);

// L√≥gica diferente para cada sala baseada no √≠ndice
if (i === 0) {
console.log(`üìö  ${nome}  encontra escrituras perdidas!`);
experiencia += 50;
} else if (i === 1) {
console.log("üó∫Ô∏è  "+ nome +" acha um mapa perdido da caverna !");
tesouroColetado.push("mapa velho");
} else {
console.log("üóøestalactites come√ßam a cair em " + nome + "!");
vidaAtual -= 10; // Pequeno dano de queda por objetos
}
}

console.log("üìä Explora√ß√£o completa! XP: " + experiencia + " | Vida: " + vidaAtual)

// === CAP√çTULO 3: A UNI√ÉO DOS ALIADOS ===
console.log("");
console.log("ü§ù CAP√çTULO 3: Reunindo os Aliados Arcanos");

// Recrutando aliados com for tradicional
console.log("üèπ " + nome + " convoca seus aliados para a batalha derradeira que decidira o final dessa historia:");

for (let i = 0; i < aliados.length; i++) {
let aliado = aliados[i];
console.log("‚ö° Aliado " + (i + 1) + ": " + aliado + " se junta √† miss√£o!");

// Cada posi√ß√£o no array determina habilidade especial
if (i === 0) { // Primeiro aliado - L√≠der m√°gico
console.log("üîÆ Como l√≠der m√°gico, " + aliado + " multiplica o poder da equipe e cura seus aliados!");
ouro += 50;
vida+=10;
} else if (i === 1) { // Segundo aliado - Defensor
console.log("üõ°Ô∏è Como suporte principal, " + aliado + " fortalece a resist√™ncia !");
vidaMaxima += 30;
} else { // Demais aliados - Especialistas
console.log("üèπ Como especialista em tiros, " + aliado + " aprimora as t√°ticas de combate e visualiza os inimigos mais longe!");
experiencia += 40;
}
}

console.log("üéñÔ∏è Equipe completa! Ouro: " + ouro + " | Vida m√°xima: " + vidaMaxima);

// === CAP√çTULO 4: A BATALHA FINAL DOS ARRAYS ===
console.log("");
console.log("üêâ CAP√çTULO 4: Confronto com as Criaturas da "+ caverna  +" ");

// Sistema de batalha usando arrays e for tradicional
let inimigosBatalha = ["golem de minerais", "magos das trevas", "labubu dos Arrays"];
let danoRecebido = [];

console.log(`üíÄ  ${nome }batalha contra seus inimigos ${inimigosBatalha.length} inimigos vorazes!`);

// Batalha usando for tradicional para controle preciso
for (let i = 0; i < inimigosBatalha.length; i++) {
let inimigo = inimigosBatalha[i];
let dano = Math.floor(Math.random() * 30) + 10; // Dano entre 10 e 39

console.log(`‚öîÔ∏è Rodada ${(i + 1)} - duelando com: ${inimigo}`);
console.log(`üí•  ${nome} causa ${ dano} de dano!`);

danoRecebido.push(dano); // Armazena dano para c√°lculos posteriores

// L√≥gica especial para cada rodada baseada no √≠ndice
if (i === 0) {
console.log("üíé Primeira vit√≥ria! minerais de todos os tipos concedem diferentes buffs!");
tesouroColetado.push("amontoado de minerais");
} else if (i === 1) {
console.log("üåë Segunda batalha! As sombras drenam energia e diminuem o dano da equipe, mas " + nome + " resiste!");
vidaAtual -= 15;
dano -= 10;
} else {
console.log("üî• Batalha final! O labubu recua! Vit√≥ria √©pica alcan√ßada!");
experiencia += 100;
tesouroColetado.push("pelucia misteriosa");
}
}

// Calculando estat√≠sticas da batalha usando for tradicional

let danoTotal = 0;
for (let i = 0; i < danoRecebido.length; i++) {
danoTotal += danoRecebido[i];
console.log("üìä Rodada " + (i + 1) + " - Dano: " + danoRecebido[i]);
}

console.log("‚ö° Dano total causado: " + danoTotal);
console.log("üèÜ Tesouros coletados: " + tesouroColetado.length + " itens lendarios mas provavelmente inuteis!");

// === EP√çLOGO: O MESTRE DOS ARRAYS ===
console.log("");
console.log("üëë === EP√çLOGO: " + nome + " - CONQUISTADOR DO CASTELO ===");

// Estat√≠sticas finais da jornada
console.log("üìà Estat√≠sticas Finais da Aventura:");
console.log("‚Ä¢ N√≠vel alcan√ßado: " + nivel);
console.log("‚Ä¢ Experi√™ncia total: " + experiencia);
console.log("‚Ä¢ Vida restante: " + vidaAtual + "/" + vidaMaxima);
console.log("‚Ä¢ Ouro acumulado: " + ouro);
console.log("‚Ä¢ Itens no invent√°rio: " + inventario.length);
console.log("‚Ä¢ Aliados conquistados: " + aliados.length);
console.log("‚Ä¢ Tesouros √©picos: " + tesouroColetado.length);

// === ADICIONE SUAS 10+ LINHAS √âPICAS DE CONTINUA√á√ÉO AQUI ===
console.log("");
console.log("üåü A LENDA AINDA VIVE...");
console.log("Ap√≥s desbravar a "+ caverna+", " + nome + "viu que estava muito mais forta.");
console.log("apos sair da caverna ele decide ver os üéíespolios de sua gloriosa aventura .");
console.log(`quando ele pega em suas m√£os o boneco de labubu aparece um üßûgenio falando que ele tinha 2 desejos`);
console.log(`${nome} pede que todos os seus companheiros e ele consigam o glorioso üóíÔ∏èmetodo dos arrays`);
console.log(`E seu ultimo desejo ele pediu que queria finalmente relizar seu maior sonho em vida ‚ù§Ô∏è `);
console.log(`DESENHAR ONIB√öS NO RIO DE JANEIRO.üñºÔ∏èüöå`);
console.log(`üó∫Ô∏è E assima a historia de hero√≠ que provou que ele n√£o so mais um no mundo acaba mas n√£o fique triste que acabou mas sim que aconteceu.`);

console.log("");
console.log("");
console.log("üéØ FIM DO N√çVEL 3 | AGUARDE FUTURAS AVENTURAS NA ACADEMIA DOS C√ìDIGOS! *_* üéØ");